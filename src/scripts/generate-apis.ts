/**
 * Auto-generate Azure Function HTTP handlers for each DAO.
 *
 * Inputs (must already exist):
 * - src/daos/index.ts exports:
 *   - DaoNames: readonly string[]  (e.g. ['UsersDao', 'RolesDao', ...])
 *
 * Outputs:
 * - src/functions/auto/<routeBase>.function.ts
 *
 * Usage:
 *   ts-node scripts/generate-apis.ts
 *   ts-node scripts/generate-apis.ts --force   # overwrite existing files
 */

import path from 'node:path'

import { kebabCase, sortBy } from 'lodash-es'

import { SchemaNames } from '../schemas/index.ts'
import { writeFormattedFileToDir } from '../utils/write-file-to-dir.ts'

const ROOT = process.cwd()
const AUTO_API_DIR = path.resolve(ROOT, 'src/functions/api/auto')
const headerBanner = `/* Auto-generated by scripts/generate-apis.ts.
 * Do NOT edit this file manually.
 */`

async function generateApis() {
  const modelNames = sortBy([...SchemaNames])

  for (const model of modelNames) {
    const fileBase = kebabCase(model)

    const apiSource = `${headerBanner}
import { BaseHttpHandlers } from '../../../lib/base-http-handlers.ts'

BaseHttpHandlers( '${model}Dao', '${fileBase}')
`
    await writeFormattedFileToDir(AUTO_API_DIR, `${fileBase}.api.ts`, apiSource)
    console.log(`${model} api generated`)
  }
}

generateApis().catch((err) => {
  console.error('generate-apis failed:', err)
  process.exit(1)
})
